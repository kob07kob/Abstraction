main process cfa {
	var p2 : int
	var p3 : int
	var p4 : int
	var p5 : int
	var lk4 : int
	var lk3 : int
	var lk2 : int
	var p1 : int
	var cond : int
	var tmp_15 : int
	var lk8 : int
	var lk7 : int
	var lk6 : int
	var lk5 : int
	var p6 : int
	var p7 : int
	var tmp_8 : int
	var p8 : int
	var lk9 : int
	var p9 : int

	init loc L0
	loc L3
	loc L5
	loc L9
	loc L23
	loc L17
	loc L12
	loc L27
	loc L6
	loc L8
	loc L22
	error loc L2
	loc L20
	loc L26
	final loc L1
	loc L13
	loc L25

	L12 -> L1 {
		assume cond = 0
	}
	L13 -> L8 {
		assume p8 /= 0
		lk8 := 1
	}
	L25 -> L20 {
		assume not (p3 /= 0)
	}
	L26 -> L27 {
		assume false
	}
	L23 -> L27 {
		assume not (lk9 /= 1)
	}
	L5 -> L13 {
		assume not (p7 /= 0)
	}
	L6 -> L25 {
		assume p2 /= 0
		lk2 := 1
	}
	L9 -> L8 {
		assume p1 /= 0
	}
	L17 -> L27 {
		assume not (p9 /= 0)
	}
	L8 -> L17 {
		assume not (p9 /= 0)
	}
	L3 -> L5 {
		assume p6 /= 0
		lk6 := 1
	}
	L0 -> L27 {
		havoc tmp_8
		p9 := tmp_8
	}
	L3 -> L5 {
		assume not (p6 /= 0)
	}
	L22 -> L3 {
		assume not (p5 /= 0)
	}
	L8 -> L17 {
		assume p9 /= 0
		lk9 := 1
	}
	L25 -> L20 {
		assume p3 /= 0
		lk3 := 1
	}
	L22 -> L3 {
		assume p5 /= 0
		lk5 := 1
	}
	L6 -> L25 {
		assume not (p2 /= 0)
	}
	L9 -> L6 {
		assume not (p1 /= 0)
	}
	L12 -> L9 {
		assume not (cond = 0)
		lk9 := 0
	}
	L23 -> L26 {
		assume lk9 /= 1
	}
	L20 -> L22 {
		assume not (p4 /= 0)
	}
	L26 -> L2 {
		assume not false
	}
	L17 -> L23 {
		assume p9 /= 0
	}
	L13 -> L8 {
		assume not (p8 /= 0)
	}
	L20 -> L22 {
		assume p4 /= 0
		lk4 := 1
	}
	L5 -> L13 {
		assume p7 /= 0
		lk7 := 1
	}
	L27 -> L12 {
		havoc tmp_15
		cond := tmp_15
	}
}
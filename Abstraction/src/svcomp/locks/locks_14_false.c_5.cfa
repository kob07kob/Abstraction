main process cfa {
	var p11 : int
	var p2 : int
	var p3 : int
	var lk10 : int
	var p4 : int
	var p10 : int
	var lk11 : int
	var p5 : int
	var lk4 : int
	var lk3 : int
	var lk2 : int
	var p1 : int
	var cond : int
	var tmp_14 : int
	var tmp_10 : int
	var lk8 : int
	var lk7 : int
	var lk6 : int
	var lk5 : int
	var p6 : int
	var p7 : int
	var p8 : int
	var p9 : int
	var lk9 : int

	loc L7
	loc L8
	error loc L2
	loc L31
	loc L12
	loc L10
	loc L22
	loc L19
	init loc L0
	loc L25
	loc L4
	loc L13
	loc L6
	loc L16
	loc L18
	loc L3
	final loc L1
	loc L14
	loc L26

	L6 -> L25 {
		assume p10 /= 0
		lk10 := 1
	}
	L8 -> L6 {
		assume not (p9 /= 0)
	}
	L3 -> L8 {
		assume not (p8 /= 0)
	}
	L31 -> L3 {
		assume p7 /= 0
		lk7 := 1
	}
	L12 -> L25 {
		assume p1 /= 0
	}
	L16 -> L4 {
		assume not (p4 /= 0)
	}
	L14 -> L31 {
		assume not (p6 /= 0)
	}
	L19 -> L12 {
		assume not (cond = 0)
		lk11 := 0
	}
	L14 -> L31 {
		assume p6 /= 0
		lk6 := 1
	}
	L6 -> L25 {
		assume not (p10 /= 0)
	}
	L22 -> L13 {
		assume p11 /= 0
	}
	L18 -> L7 {
		assume false
	}
	L10 -> L26 {
		assume p2 /= 0
		lk2 := 1
	}
	L16 -> L4 {
		assume p4 /= 0
		lk4 := 1
	}
	L10 -> L26 {
		assume not (p2 /= 0)
	}
	L25 -> L22 {
		assume p11 /= 0
		lk11 := 1
	}
	L8 -> L6 {
		assume p9 /= 0
		lk9 := 1
	}
	L7 -> L19 {
		havoc tmp_14
		cond := tmp_14
	}
	L13 -> L7 {
		assume not (lk11 /= 1)
	}
	L19 -> L1 {
		assume cond = 0
	}
	L26 -> L16 {
		assume not (p3 /= 0)
	}
	L3 -> L8 {
		assume p8 /= 0
		lk8 := 1
	}
	L26 -> L16 {
		assume p3 /= 0
		lk3 := 1
	}
	L0 -> L7 {
		havoc tmp_10
		p11 := tmp_10
	}
	L22 -> L7 {
		assume not (p11 /= 0)
	}
	L13 -> L18 {
		assume lk11 /= 1
	}
	L4 -> L14 {
		assume not (p5 /= 0)
	}
	L25 -> L22 {
		assume not (p11 /= 0)
	}
	L12 -> L10 {
		assume not (p1 /= 0)
	}
	L31 -> L3 {
		assume not (p7 /= 0)
	}
	L4 -> L14 {
		assume p5 /= 0
		lk5 := 1
	}
	L18 -> L2 {
		assume not false
	}
}
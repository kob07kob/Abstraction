main process cfa {
	var p2 : int
	var p3 : int
	var lk10 : int
	var p4 : int
	var p10 : int
	var p5 : int
	var lk4 : int
	var lk3 : int
	var lk2 : int
	var p1 : int
	var cond : int
	var tmp_11 : int
	var lk8 : int
	var lk7 : int
	var lk6 : int
	var lk5 : int
	var p6 : int
	var tmp_9 : int
	var p7 : int
	var p8 : int
	var p9 : int
	var lk9 : int

	loc L10
	final loc L1
	loc L7
	loc L25
	loc L3
	loc L11
	loc L5
	loc L22
	loc L16
	loc L9
	loc L15
	loc L18
	loc L19
	error loc L2
	loc L24
	loc L20
	loc L26
	init loc L0

	L20 -> L15 {
		assume not (p3 /= 0)
	}
	L3 -> L24 {
		assume not (p6 /= 0)
	}
	L18 -> L22 {
		assume not (p10 /= 0)
	}
	L5 -> L16 {
		assume not (p8 /= 0)
	}
	L10 -> L18 {
		assume not (p10 /= 0)
	}
	L11 -> L22 {
		assume not (lk10 /= 1)
	}
	L15 -> L25 {
		assume not (p4 /= 0)
	}
	L16 -> L10 {
		assume p9 /= 0
		lk9 := 1
	}
	L24 -> L5 {
		assume not (p7 /= 0)
	}
	L22 -> L19 {
		havoc tmp_11
		cond := tmp_11
	}
	L26 -> L22 {
		assume false
	}
	L5 -> L16 {
		assume p8 /= 0
		lk8 := 1
	}
	L3 -> L24 {
		assume p6 /= 0
		lk6 := 1
	}
	L0 -> L22 {
		havoc tmp_9
		p10 := tmp_9
	}
	L7 -> L10 {
		assume p1 /= 0
	}
	L11 -> L26 {
		assume lk10 /= 1
	}
	L19 -> L7 {
		assume not (cond = 0)
		lk10 := 0
	}
	L9 -> L20 {
		assume p2 /= 0
		lk2 := 1
	}
	L25 -> L3 {
		assume p5 /= 0
		lk5 := 1
	}
	L19 -> L1 {
		assume cond = 0
	}
	L24 -> L5 {
		assume p7 /= 0
		lk7 := 1
	}
	L10 -> L18 {
		assume p10 /= 0
		lk10 := 1
	}
	L25 -> L3 {
		assume not (p5 /= 0)
	}
	L26 -> L2 {
		assume not false
	}
	L9 -> L20 {
		assume not (p2 /= 0)
	}
	L16 -> L10 {
		assume not (p9 /= 0)
	}
	L7 -> L9 {
		assume not (p1 /= 0)
	}
	L15 -> L25 {
		assume p4 /= 0
		lk4 := 1
	}
	L20 -> L15 {
		assume p3 /= 0
		lk3 := 1
	}
	L18 -> L11 {
		assume p10 /= 0
	}
}
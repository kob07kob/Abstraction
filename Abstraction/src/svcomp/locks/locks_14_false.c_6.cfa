main process cfa {
	var p2 : int
	var p3 : int
	var lk10 : int
	var p4 : int
	var p10 : int
	var p5 : int
	var lk4 : int
	var lk3 : int
	var lk2 : int
	var p1 : int
	var cond : int
	var tmp_14 : int
	var lk8 : int
	var lk7 : int
	var lk6 : int
	var lk5 : int
	var tmp_9 : int
	var p6 : int
	var p7 : int
	var p8 : int
	var p9 : int
	var lk9 : int

	loc L26
	loc L15
	loc L6
	loc L9
	loc L7
	loc L14
	init loc L0
	final loc L1
	loc L21
	loc L12
	error loc L2
	loc L16
	loc L5
	loc L24
	loc L29
	loc L10
	loc L28
	loc L17

	L15 -> L7 {
		assume p10 /= 0
		lk10 := 1
	}
	L0 -> L17 {
		havoc tmp_9
		p10 := tmp_9
	}
	L6 -> L26 {
		assume not (p4 /= 0)
	}
	L12 -> L6 {
		assume not (p3 /= 0)
	}
	L6 -> L26 {
		assume p4 /= 0
		lk4 := 1
	}
	L21 -> L17 {
		assume not (lk10 /= 1)
	}
	L29 -> L16 {
		assume not (cond = 0)
		lk10 := 0
	}
	L16 -> L14 {
		assume not (p1 /= 0)
	}
	L5 -> L24 {
		assume not (p8 /= 0)
	}
	L9 -> L28 {
		assume not (p6 /= 0)
	}
	L14 -> L12 {
		assume not (p2 /= 0)
	}
	L17 -> L29 {
		havoc tmp_14
		cond := tmp_14
	}
	L5 -> L24 {
		assume p8 /= 0
		lk8 := 1
	}
	L29 -> L1 {
		assume cond = 0
	}
	L24 -> L15 {
		assume p9 /= 0
		lk9 := 1
	}
	L28 -> L5 {
		assume not (p7 /= 0)
	}
	L7 -> L17 {
		assume not (p10 /= 0)
	}
	L15 -> L7 {
		assume not (p10 /= 0)
	}
	L24 -> L15 {
		assume not (p9 /= 0)
	}
	L14 -> L12 {
		assume p2 /= 0
		lk2 := 1
	}
	L21 -> L10 {
		assume lk10 /= 1
	}
	L26 -> L9 {
		assume p5 /= 0
		lk5 := 1
	}
	L10 -> L17 {
		assume false
	}
	L7 -> L21 {
		assume p10 /= 0
	}
	L9 -> L28 {
		assume p6 /= 0
		lk6 := 1
	}
	L10 -> L2 {
		assume not false
	}
	L12 -> L6 {
		assume p3 /= 0
		lk3 := 1
	}
	L16 -> L15 {
		assume p1 /= 0
	}
	L28 -> L5 {
		assume p7 /= 0
		lk7 := 1
	}
	L26 -> L9 {
		assume not (p5 /= 0)
	}
}